<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="a_mapper">

	<!-- 전체게시물 조회 -->
	<select id="academy_list" resultType="vo.AcademyVO">
		select * from academy order by a_regdate desc
	</select>


	<select id="academy_one" resultType="vo.AcademyVO"
		parameterType="int">
		select * from academy where a_idx= #{a_idx}
	</select>

	<!-- 학원 등록하기 -->
	<insert id="academy_insert" parameterType="vo.AcademyVO">
		insert into academy values(
				seq_a_idx.nextVal,
				#{a_name},
				#{m_idx},
				#{a_owner},
				#{a_tel},
				#{a_content},
				#{a_site},
				#{a_post},
				#{a_addr},
				#{a_addr_detail},
				#{a_image_s},
				#{a_image_l},
				sysdate,
				#{a_area}, <!-- 분야 추가하기 -->
				#{a_keyword}
		)
	</insert>
	
	<!-- 학원 삭제하기 -->
	<delete id="academy_delete" parameterType="int">
		delete from academy where a_idx=#{a_idx}
	</delete>
	<!-- 학원 수정하기 -->
	<update id="academy_modify" parameterType="vo.AcademyVO">
		update academy
		set a_name = #{a_name},
			a_owner = #{a_owner},
			a_tel = #{a_tel},
			a_content = #{a_content},
			a_site = #{a_site},
			a_post = #{a_post},
			a_addr = #{a_addr},
			a_addr_detail = #{a_addr_detail},
			a_image_s = #{a_image_s},
			a_image_l = #{a_image_l},
			a_area = #{a_area}, <!-- 분야 추가하기 -->
			a_keyword = #{a_keyword}
		where a_idx = #{a_idx}
	</update>
	
	<!-- 페이지에 따른 게시물 조회 -->
   <select id="academy_list_paging" parameterType="java.util.Map" resultType="vo.AcademyVO">
      select * from
         (select rank() over( order by a_regdate desc) no, a_mapper.*
         from( select * from academy ) a_mapper)
         where no between #{start} and #{end}
   </select>
   
   <!-- 전체 게시물 수 조회 -->
   <select id="academy_count" resultType="int">
      select count(*) from academy
   </select>
   
   	<!-- 페이지에 따른 게시물 조회(필터) -->
   <select id="academy_list_filter" parameterType="vo.FilterVO" resultType="vo.AcademyVO">
      select * from
         (select rank() over( order by a_regdate desc) no, a_mapper.*
         from( select * from academy where a_addr like #{f_addr} and a_area like #{f_area} and a_keyword like #{f_keyword}) a_mapper)
         where no between #{start} and #{end}
   </select>
   
      <!-- 전체 게시물 수 조회(필터) -->
   <select id="academy_count_filter" parameterType="vo.FilterVO" resultType="int">
      select count(*) from academy
      where a_addr like #{f_addr} and a_area like #{f_area} and a_keyword like #{f_keyword}
   </select>

	
</mapper>












